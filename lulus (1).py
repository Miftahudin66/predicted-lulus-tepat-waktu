# -*- coding: utf-8 -*-
"""lulus.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mJjMGsrLLwvRbRKIyx0ltqE7WF3zfFyh
"""

import streamlit as st
import pandas as pd
import joblib
import matplotlib.pyplot as plt
import seaborn as sns

# Load model
model = joblib.load('best_model.pkl')

st.title("ðŸŽ“ Prediksi Kelulusan Tepat Waktu")

st.sidebar.header("Masukkan Data")

# Fungsi input manual
def input_user():
    ipk = st.sidebar.number_input("IPK", min_value=0.0, max_value=4.0, value=3.0)
    pelatihan = st.sidebar.number_input("Pelatihan Pengembangan Diri", min_value=0, value=1)
    prestasi = st.sidebar.number_input("Prestasi", min_value=0, value=0)
    forum = st.sidebar.number_input("Forum Komunikasi Kuliah", min_value=0, value=1)
    organisasi = st.sidebar.number_input("Kegiatan Organisasi", min_value=0, value=0)

    data = {
        'IPK': [ipk],
        'Pelatihan Pengembangan Diri': [pelatihan],
        'Prestasi': [prestasi],
        'Forum Komunikasi Kuliah': [forum],
        'Kegiatan Organisasi': [organisasi]
    }
    return pd.DataFrame(data)

# Pilihan mode input
input_mode = st.radio("Pilih mode input", ["Manual", "Upload CSV"])

if input_mode == "Manual":
    input_df = input_user()
else:
    uploaded_file = st.file_uploader("Upload file CSV", type=["csv"])
    if uploaded_file is not None:
        input_df = pd.read_csv(uploaded_file)
        # Validasi kolom
        expected_cols = ['IPK', 'Pelatihan Pengembangan Diri', 'Prestasi', 'Forum Komunikasi Kuliah', 'Kegiatan Organisasi']
        if not all(col in input_df.columns for col in expected_cols):
            st.error(f"Kolom CSV harus: {', '.join(expected_cols)}")
            st.stop()
    else:
        st.warning("Silakan upload file CSV.")
        st.stop()

# Tampilkan data input
st.write("### Data yang Dimasukkan:")
st.write(input_df)

# Prediksi
if st.button("Prediksi"):
    predictions = model.predict(input_df)
    input_df['Prediksi Lulus Cepat'] = predictions

    st.write("### Hasil Prediksi:")
    st.write(input_df)

    # Visualisasi hasil prediksi
    fig, ax = plt.subplots()
    sns.countplot(x='Prediksi Lulus Cepat', data=input_df, ax=ax)
    ax.set_xticklabels(['Tidak Lulus Tepat Waktu', 'Lulus Tepat Waktu'])
    ax.set_title("Distribusi Hasil Prediksi")
    st.pyplot(fig)